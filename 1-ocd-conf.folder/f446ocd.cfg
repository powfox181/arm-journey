source [find mem_helper.tcl]

##  these command stays in configuration stage
# set up debug adapter, enable which interface driver will be used
adapter driver st-link
# this line of code is used to identified the list of adapter devices
st-link vid_pid 0x0483 0x3744 0x0483 0x3748 0x0483 0x374b 0x0483 0x374d 0x0483 0x374e 0x0483 0x374f 0x0483 0x3752 0x0483 0x3753 0x0483 0x3754

transport select
# dapdirect_swd


###### -----------------------
#####   target setup
#   set up default
# add tap to scan chain
#   add cpu targets
#   specify any cpu/chip/core features ??
#   on-chip flash set up ??/
set _chipname stm32f446
set _endian little
# this is for swd tapid
set _cputapid 0x2ba01477
# working space, size of ram
set _workareasize 0x1bfff
#   add tap - cpu type, and create a dap for target
swd newdap $_chipname cpu -irlen 4 -expected-id $_cputapid
dap create $_chipname.dap -chain-position $_chipname.cpu
#   create a target with above tap/dap
set _targetname $_chipname.cpu
target create $_targetname  cortex_m -dap $_chipname.dap -endian $_endian
$_targetname configure -work-area-phys 0x20000000 -work-area-size $_workareasize -work-area-backup 0

# process for reading memory
$_targetname configure -event examine-end {
    echo " ---- event EXAMINE END"
    set tend 0x453
    puts [format "test event %s" $tend]  
    # enable debug in low power mode
    #mmw 0xe0042004  0x00000007 0
    set old [mdw 0xe0042004 0]
    puts [format "value of debug reg %d" $old]
    set setbits 0x0000007
    set modify [expr {$old | $setbits}] 
    puts [format "value of mody of debug mcu reg %s" $modify]
    # stop watchdog on halt
    mmw 0xe0042008  0x00001800 0
}

$_targetname configure -event reset-init {
    echo "--- event reset - init"
    #   set up pll parameters on Rcc register (0x4002 3800)
    #   set pll output clock to 64mhz
    mww 0x40023804 0x8012008

    # set up wait states between flash memory read time and cpu clock frequency
    # according to table 5 - section 3.4.1, 64mhz -> 2 wait states( 3 cpu cycles)
    mww 0x40023c00 0x00000102
    # now modify the register value
    #mmw 0x40023800 0x01000000 0 ;# rcc_cr |= pllon
    #---------- get value of rcc_cr 0x40023800 
    set rcccrold [mdw 0x40023800 0]
    puts [format "val of rcccrold %s" $rcccrold]
    set clearbits 0x01000000
    set modifyval [expr {$rcccrold & ~$clearbits}]
    puts [format "value of modify val %s" [$modifyval]]
    sleep 10    ;# wait for pll to lock in
    # this set up : sysclock = 64mhz, apb1, low speed clock, must not exceed 45mhz
    # there for need to do divide on rcc_cfgr
    #mmw 0x40023808 0x00001000 0 ;# rcc_cfgr |= rcc_cfgr_ppre1_div2
    #mmw 0x40023808  0x00000002 0 ;# set ppl_p as system clock
    sleep 5
    # boost jtag frequency
    adapter speed 8000
}

$_targetname configure -event trace-config {
    # enable trace features, the mode is async, change accordingly
    mmw 0xe0042004  0x00000020 0
}

$_targetname configure -event reset-start {
    echo " ---- event RESET START"
    adapter speed 1800
}

$_targetname configure -event gdb-attach {
    echo " ---- a client GDB ATTACH"
	reset init
}

$_targetname configure -event gdb-detach {
	echo " --- my gdb detach "
	reset run
}

$_targetname configure -event halted {
	echo " ---- my target halted"
}

$_targetname configure -event debug-halted {
    echo "---- target DEBUG HALTED for breakpoint"
}
$_targetname configure -event debug-resumed {
    echo "---- target DEBUG resumed for example == gdb run""
}
####     flash configuration
set _flashname $_chipname.flash
flash bank $_flashname stm32f2x 0 0 0 0 $_targetname

###### set up adapter speed in init file, aka this file
adapter speed 2000
adapter srst delay 200
#####   set up reset config command
reset_config srst_nogate srst_only connect_assert_srst

if { ![using_hla]} {
    cortex_m reset_config sysresetreq
}

### this proccess is built in and will run in running stage, allow any overrides
proc init_targets {} {
       echo " ---- hey, targets init"
}
#this proccess is built in and will run in running stage, which allow it to access features not available in \
###  configuration stage
proc init_board {} {
    echo " ---- hey, board"
}

###     to reset cpu on start up, adding init and reset at the end of config file or on command line
init
reset
#reset
adapter srst delay 200
lappend post_init_commands {
    echo " ---- no error on init, successfully"
}
###     end of configuration stage

